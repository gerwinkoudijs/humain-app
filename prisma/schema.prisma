generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model settings {
  name        String   @id @db.VarChar
  description String?  @db.VarChar
  value       String?  @db.VarChar
  category    String?  @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
}

model chat_sessions {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String?         @db.VarChar
  user          String?         @db.VarChar
  post_title    String?         @db.VarChar
  post_text     String?         @db.Text
  post_hashtags String?         @db.VarChar
  image_base64  String?         @db.VarChar
  template      Int?            @default(1) @db.Integer
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  chat_messages chat_messages[]

  @@index([created_at], map: "idx_chat_sessions_created_at")
}

model chat_messages {
  id              String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chat_session_id String  @db.Uuid
  role            String  @db.VarChar
  text            String? @db.Text
  prompt          String? @db.Text
  data            Json?   @default("{}")
  data_type       String? @db.VarChar
  type            String? @db.VarChar
  token_count     Int?    @default(0)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)

  chat_session chat_sessions @relation(fields: [chat_session_id], references: [id], onDelete: Cascade)

  @@index([created_at], map: "idx_chat_messages_created_at")
  @@index([chat_session_id], map: "idx_chat_messages_chat_session_id")
}
